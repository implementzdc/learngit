<?xml version="1.0" encoding="UTF-8" ?>
<!-- scan:
	  当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
	 scanPeriod:
	 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
	 debug:
	  当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
	  
	  
	 ERROR是最高级别，当设置为ERROR时只能打印ERROR信息
            当设置为WARN级别时只能打印WARN和ERROR信息
            当设置为INFO级别时只能打印INFO，WARN和ERROR信息
            当设置为DEBUG级别时，一次类推即可
            
     <timestamp></timestamp> 获取时间标签       
     
 -->

<configuration>
	<!-- 日志根节点 (获取TOMCAT的catalina根目录)
	<property name="logDir" value="${catalina.base}/" />-->
	
	<!-- Logback上下文名称 -->
	<timestamp key="DemoLog" datePattern="yyyyMMdd" />
	<contextName>DemoLog_${DemoLog}</contextName>
	
	<!-- 日志打印在控制台配置 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoder 默认配置为PatternLayoutEncoder -->
		<encoder>   
      		<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>   
    	</encoder>
	</appender>
	
	<!-- 普通将日志信息打印在指定文件中 
	<appender name="LOGFINE" class="ch.qos.logback.core.FileAppender">
		<file>${logDir}/demolog.log</file>
		<append>true</append>
		<encoder>   
      		<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>   
    	</encoder>
	</appender>-->
	
	
	<!-- 可以根据时间进行滚动,动态的将日志信息打印在指定文件中 
	<appender name="LOGFINE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>logs/demolog.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>30</maxHistory>  
    	</rollingPolicy> 
    	
    	<encoder>   
      		<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>   
    	</encoder>
	</appender>-->
	
	<!-- 打印SQL信息 -->
	<logger name="com.ibatis" level="DEBUG" />    
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />    
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />    
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />    
	<logger name="java.sql.Connection" level="DEBUG" />    
	<logger name="java.sql.Statement" level="DEBUG" />    
	<logger name="java.sql.PreparedStatement" level="DEBUG" /> 
	
	<root level="DEBUG">             
    	<appender-ref ref="CONSOLE" />   
    	<!-- <appender-ref ref="LOGFINE" /> -->   
  	</root>
</configuration>